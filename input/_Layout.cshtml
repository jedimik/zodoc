@{
	Layout = "/_Master.cshtml";
	ViewData[Keys.Title] = @Model.WithoutSettings.String(Keys.Title);
}

@section Infobar {	
	@if (IsSectionDefined("Infobar")) {
		RenderSection("Infobar");
	}
	else { 			
		@Html.Partial("_Infobar") 
	} 
}

@section Search {
	@if (IsSectionDefined("Search")) {
		RenderSection("Search");
	}
}

@section Sidebar {
	@if (IsSectionDefined("Sidebar")) {
		RenderSection("Sidebar");
	}
	else { 		
		@Html.Partial("Sidebar/_ChildPages") 
	}
}

@if(Model.Bool(DocsKeys.NoContainer, false))
{
	@RenderBody()
}
else
{
	<section class="content-header">
		<h1>@ViewData[Keys.Title]</h1>
	</section>
	<section class="content">

		@if(Model.String("type")==(string)Model.String("solutionType"))
		{
		<blockquote class="blockquote">
		
		@{
			
			var langs = Model.Metadata.Get<List<string>>("assignmentsLangsList");
			
			if (langs.Count ==0)
			{
				@Html.Partial("_LanguageLinks",new string[] {"localization_orphanedSolution",Model.String("lang")});

			}else
			{
				string relativeLinkToAssignmentWithoutLang =
					String.Join("/",Model.String("RelativeFilePath").Split('/').Skip(3));
				if(langs.Contains(Model.String("lang")))
				{
					@Html.Partial("_LanguageLinks",new string[] {"localization_assignmentLink" , Model.String("lang") , relativeLinkToAssignmentWithoutLang,});
				}
				else {

					@Html.Partial("_LanguageLinks",new string[] {"localization_assignmentAvailableText",Model.String("lang")});
					int i = 0;
					foreach (var lan in langs )
					{
						string separator = "";
						if (langs.Count()-i > 1)
						{
							separator = ",";
						}else
						{
							separator = ".";
						}
						i++;
						@Html.Partial("_LanguageLinks",new string[] {"localization_assignmentsLangsList",lan,relativeLinkToAssignmentWithoutLang,separator});
					}
				}	
			}	
    
		 
		} 
		
		</blockquote>	
		
		}

	@{
	 var langsList = Model.Metadata.Get<List<string>>("otherLanguagesList");
	@if (langsList!=null)
	 {
		
			<table><tr>
		 @foreach (var lan in langsList )
		{
			<td>
			 @Html.Partial("_LanguageLinks",new string[] {"localization_languagePacks",lan,Model.String("RelativeFilePath"),Model.String("lang")}) 
	 		</td>
		 }	 
		 </tr></table> 
		
	}   
	}   

	

 @if (!String.IsNullOrEmpty( Model.String("folderWithSourcesRelativePath")))
	 {
		<blockquote class="blockquote">
		@{
		string githubFolder = Context.String(DocsKeys.BaseEditUrl)+Model.String("folderWithSourcesRelativePath");
		string downGitDownloadLink = "https://minhaskamal.github.io/DownGit/#/home?url="+githubFolder;
		@Html.Partial("_LanguageLinks",new string[] {"localization_githubFolderLink" , Model.String("lang") , githubFolder,downGitDownloadLink}) 
		
		}
		</blockquote>
	}  


		@RenderBody()


	@{var solutionsLangsList = Model.Metadata.Get<List<string>>("solutionsLangsList");}
	@if (solutionsLangsList!=null &&solutionsLangsList.Count>0 )
	 {
		string relativeLinkToSolutionWithoutLang = 
			String.Join("/",Model.String("RelativeFilePath").Split('/').Skip(2));
		<blockquote class="blockquote">
		@{

		if(solutionsLangsList.Contains(Model.String("lang")))
		{
		@Html.Partial("_LanguageLinks",new string[] {"localization_solutionLink" , Model.String("lang") , relativeLinkToSolutionWithoutLang,}) 
		}else {

		@Html.Partial("_LanguageLinks",new string[] {"localization_solutionAvailableText",Model.String("lang")})
		
		
		int i = 0;  
		 foreach (var lan in solutionsLangsList )
		{
			 string separator = "";
			 @if (solutionsLangsList.Count()-i > 1)
			  {
				  separator = ",";
			  }else 
			  {
				  separator = ".";
			  }
			  i++;

			 @Html.Partial("_LanguageLinks",new string[] {"localization_solutionLanguages",lan,relativeLinkToSolutionWithoutLang,separator}) ;
	 	}	 
		} 
		}
		</blockquote>
	}   
	 

	</section>
}